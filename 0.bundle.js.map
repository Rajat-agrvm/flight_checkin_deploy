{"version":3,"sources":["webpack:///./src/api/apiUtils.js","webpack:///./src/components/common/Spinner.js","webpack:///./src/api/passengerApi.js","webpack:///./src/redux/actions/passengerActions.js","webpack:///./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/babel-preset-react-app/node_modules/regenerator-runtime/runtime-module.js","webpack:///./node_modules/babel-preset-react-app/node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["handleResponse","response","a","ok","json","status","text","error","Error","handleError","console","Spinner","className","baseUrl","process","loadPassengers","dispatch","fetch","then","catch","passengers","type","types","loadPassengersSuccess","savePassenger","passenger","getState","id","method","headers","body","JSON","stringify","passengerApi","savedPassenger","updatePassengerSuccess","createPassengerSuccess","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","g","Function","hadRuntime","regeneratorRuntime","Object","getOwnPropertyNames","indexOf","oldRuntime","e","global","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","wrap","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","next","result","toString","keys","object","push","reverse","length","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","stop","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","i","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","abrupt","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","obj","previousPromise","callInvokeWithMethodAndArg","invoke","unwrapped","return","TypeError","pushTryEntry","locs","iteratorMethod","_slicedToArray","arr","Array","isArray","_arr","_n","_d","_e","_s","_i"],"mappings":"0LAAO,SAAeA,EAAtB,kC,4CAAO,WAA8BC,GAA9B,eAAAC,EAAA,0DACDD,EAASE,GADR,yCACmBF,EAASG,QAD5B,UAEmB,MAApBH,EAASI,OAFR,gCAKiBJ,EAASK,OAL1B,aAKGC,EALH,OAMG,IAAIC,MAAMD,GANb,aAQC,IAAIC,MAAM,gCARX,4C,sBAYA,SAASC,EAAYF,GAG1B,MADAG,QAAQH,MAAM,oBAAsBA,GAC9BA,I,gCCfR,0BAOeI,IAJC,WACd,OAAO,yBAAKC,UAAU,UAAf,gB,wECHHC,EAAUC,+ECeT,SAASC,IACd,OAAO,SAAUC,GAEf,ODfKC,MAAMJ,GAASK,KAAKlB,KAAgBmB,MAAMV,KCiB5CS,MAAK,SAACE,GACLJ,EAlBD,SAA+BI,GACpC,MAAO,CAAEC,KAAMC,IAA+BF,cAiB/BG,CAAsBH,OAEhCD,OAAM,SAACZ,GAEN,MAAMA,MAKP,SAASiB,EAAcC,GAC5B,OAAO,SAAUT,EAAUU,GAEzB,OD3BG,SAAuBD,GAC5B,OAAOR,MAAMJ,GAAWY,EAAUE,IAAM,IAAK,CAC3CC,OAAQH,EAAUE,GAAK,MAAQ,OAC/BE,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUP,KAEpBP,KAAKlB,KACLmB,MAAMV,KCoBAwB,CACUR,GACdP,MAAK,SAACgB,GACLT,EAAUE,GACNX,EA1BL,SAAgCS,GACrC,MAAO,CAAEJ,KAAMC,IAAgCG,aAyB5BU,CAAuBD,IAChClB,EA/BL,SAAgCS,GACrC,MAAO,CAAEJ,KAAMC,IAAgCG,aA8B5BW,CAAuBF,OAErCf,OAAM,SAACZ,GAEN,MAAMA,MA3Cd,qE,mBCAA8B,EAAOC,QAAU,EAAQ,K,gCCAzB,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOzC,GAEP,YADAmC,EAAOnC,GAILwC,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAO9B,KAAKyB,EAAOC,GAIxB,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,GAGnEf,OAAMgB,OA/BZ,mC,mBCSA,IAAIC,EAAI,WACN,OAAON,MAAyB,iBAATD,MAAqBA,KADtC,IAEAQ,SAAS,cAATA,GAIJC,EAAaF,EAAEG,oBACjBC,OAAOC,oBAAoBL,GAAGM,QAAQ,uBAAyB,EAG7DC,EAAaL,GAAcF,EAAEG,mBAOjC,GAJAH,EAAEG,wBAAqBJ,EAEvBtB,EAAOC,QAAU,EAAQ,IAErBwB,EAEFF,EAAEG,mBAAqBI,OAGvB,WACSP,EAAEG,mBACT,MAAMK,GACNR,EAAEG,wBAAqBJ,I,kBC3B1B,SAAUU,GACT,aAEA,IAAIC,EAAKN,OAAOO,UACZC,EAASF,EAAGG,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE3CC,EAA6B,iBAAX7C,EAClB8C,EAAUd,EAAON,mBACrB,GAAIoB,EACED,IAGF7C,EAAOC,QAAU6C,OAJrB,EAaAA,EAAUd,EAAON,mBAAqBmB,EAAW7C,EAAOC,QAAU,IAc1D8C,KAAOA,EAoBf,IAOIC,EAAmB,GAYnBC,EAAoB,GACxBA,EAAkBV,GAAkB,WAClC,OAAOtB,MAGT,IAAIiC,EAAWvB,OAAOwB,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4BnB,GAC5BE,EAAOmB,KAAKF,EAAyBb,KAGvCU,EAAoBG,GAGtB,IAAIG,EAAKC,EAA2BtB,UAClCuB,EAAUvB,UAAYP,OAAO+B,OAAOT,GACtCU,EAAkBzB,UAAYqB,EAAGK,YAAcJ,EAC/CA,EAA2BI,YAAcD,EACzCH,EAA2Bb,GACzBgB,EAAkBE,YAAc,oBAYlCf,EAAQgB,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOH,YAClD,QAAOI,IACHA,IAASL,GAG2B,uBAAnCK,EAAKH,aAAeG,EAAKC,QAIhCnB,EAAQoB,KAAO,SAASH,GAUtB,OATIpC,OAAOwC,eACTxC,OAAOwC,eAAeJ,EAAQP,IAE9BO,EAAOK,UAAYZ,EACbb,KAAqBoB,IACzBA,EAAOpB,GAAqB,sBAGhCoB,EAAO7B,UAAYP,OAAO+B,OAAOH,GAC1BQ,GAOTjB,EAAQuB,MAAQ,SAAS5D,GACvB,MAAO,CAAE6D,QAAS7D,IAsEpB8D,EAAsBC,EAActC,WACpCsC,EAActC,UAAUO,GAAuB,WAC7C,OAAOxB,MAET6B,EAAQ0B,cAAgBA,EAKxB1B,EAAQ2B,MAAQ,SAASC,EAASC,EAAS3D,EAAM4D,GAC/C,IAAIC,EAAO,IAAIL,EACbzB,EAAK2B,EAASC,EAAS3D,EAAM4D,IAG/B,OAAO9B,EAAQgB,oBAAoBa,GAC/BE,EACAA,EAAKC,OAAOjG,MAAK,SAASkG,GACxB,OAAOA,EAAOnE,KAAOmE,EAAOpE,MAAQkE,EAAKC,WAsKjDP,EAAsBhB,GAEtBA,EAAGZ,GAAqB,YAOxBY,EAAGhB,GAAkB,WACnB,OAAOtB,MAGTsC,EAAGyB,SAAW,WACZ,MAAO,sBAkCTlC,EAAQmC,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAIzE,KAAO0E,EACdD,EAAKE,KAAK3E,GAMZ,OAJAyE,EAAKG,UAIE,SAASN,IACd,KAAOG,EAAKI,QAAQ,CAClB,IAAI7E,EAAMyE,EAAKK,MACf,GAAI9E,KAAO0E,EAGT,OAFAJ,EAAKnE,MAAQH,EACbsE,EAAKlE,MAAO,EACLkE,EAQX,OADAA,EAAKlE,MAAO,EACLkE,IAsCXhC,EAAQO,OAASA,EAMjBkC,EAAQrD,UAAY,CAClB0B,YAAa2B,EAEbC,MAAO,SAASC,GAcd,GAbAxE,KAAKyE,KAAO,EACZzE,KAAK6D,KAAO,EAGZ7D,KAAK0E,KAAO1E,KAAK2E,WA9fjBtE,EA+fAL,KAAKL,MAAO,EACZK,KAAK4E,SAAW,KAEhB5E,KAAK1B,OAAS,OACd0B,KAAKR,SAngBLa,EAqgBAL,KAAK6E,WAAWC,QAAQC,IAEnBP,EACH,IAAK,IAAIxB,KAAQhD,KAEQ,MAAnBgD,EAAKgC,OAAO,IACZ9D,EAAOmB,KAAKrC,KAAMgD,KACjBiC,OAAOjC,EAAKkC,MAAM,MACrBlF,KAAKgD,QA7gBX3C,IAmhBF8E,KAAM,WACJnF,KAAKL,MAAO,EAEZ,IACIyF,EADYpF,KAAK6E,WAAW,GACLQ,WAC3B,GAAwB,UAApBD,EAAWrH,KACb,MAAMqH,EAAW5F,IAGnB,OAAOQ,KAAKsF,MAGdC,kBAAmB,SAASC,GAC1B,GAAIxF,KAAKL,KACP,MAAM6F,EAGR,IAAIC,EAAUzF,KACd,SAAS0F,EAAOC,EAAKC,GAYnB,OAXAC,EAAO9H,KAAO,QACd8H,EAAOrG,IAAMgG,EACbC,EAAQ5B,KAAO8B,EAEXC,IAGFH,EAAQnH,OAAS,OACjBmH,EAAQjG,SA9iBZa,KAijBYuF,EAGZ,IAAK,IAAIE,EAAI9F,KAAK6E,WAAWT,OAAS,EAAG0B,GAAK,IAAKA,EAAG,CACpD,IAAIC,EAAQ/F,KAAK6E,WAAWiB,GACxBD,EAASE,EAAMV,WAEnB,GAAqB,SAAjBU,EAAMC,OAIR,OAAON,EAAO,OAGhB,GAAIK,EAAMC,QAAUhG,KAAKyE,KAAM,CAC7B,IAAIwB,EAAW/E,EAAOmB,KAAK0D,EAAO,YAC9BG,EAAahF,EAAOmB,KAAK0D,EAAO,cAEpC,GAAIE,GAAYC,EAAY,CAC1B,GAAIlG,KAAKyE,KAAOsB,EAAMI,SACpB,OAAOT,EAAOK,EAAMI,UAAU,GACzB,GAAInG,KAAKyE,KAAOsB,EAAMK,WAC3B,OAAOV,EAAOK,EAAMK,iBAGjB,GAAIH,GACT,GAAIjG,KAAKyE,KAAOsB,EAAMI,SACpB,OAAOT,EAAOK,EAAMI,UAAU,OAG3B,KAAID,EAMT,MAAM,IAAIhJ,MAAM,0CALhB,GAAI8C,KAAKyE,KAAOsB,EAAMK,WACpB,OAAOV,EAAOK,EAAMK,gBAU9BC,OAAQ,SAAStI,EAAMyB,GACrB,IAAK,IAAIsG,EAAI9F,KAAK6E,WAAWT,OAAS,EAAG0B,GAAK,IAAKA,EAAG,CACpD,IAAIC,EAAQ/F,KAAK6E,WAAWiB,GAC5B,GAAIC,EAAMC,QAAUhG,KAAKyE,MACrBvD,EAAOmB,KAAK0D,EAAO,eACnB/F,KAAKyE,KAAOsB,EAAMK,WAAY,CAChC,IAAIE,EAAeP,EACnB,OAIAO,IACU,UAATvI,GACS,aAATA,IACDuI,EAAaN,QAAUxG,GACvBA,GAAO8G,EAAaF,aAGtBE,EAAe,MAGjB,IAAIT,EAASS,EAAeA,EAAajB,WAAa,GAItD,OAHAQ,EAAO9H,KAAOA,EACd8H,EAAOrG,IAAMA,EAET8G,GACFtG,KAAK1B,OAAS,OACd0B,KAAK6D,KAAOyC,EAAaF,WAClBrE,GAGF/B,KAAKuG,SAASV,IAGvBU,SAAU,SAASV,EAAQW,GACzB,GAAoB,UAAhBX,EAAO9H,KACT,MAAM8H,EAAOrG,IAcf,MAXoB,UAAhBqG,EAAO9H,MACS,aAAhB8H,EAAO9H,KACTiC,KAAK6D,KAAOgC,EAAOrG,IACM,WAAhBqG,EAAO9H,MAChBiC,KAAKsF,KAAOtF,KAAKR,IAAMqG,EAAOrG,IAC9BQ,KAAK1B,OAAS,SACd0B,KAAK6D,KAAO,OACa,WAAhBgC,EAAO9H,MAAqByI,IACrCxG,KAAK6D,KAAO2C,GAGPzE,GAGT0E,OAAQ,SAASL,GACf,IAAK,IAAIN,EAAI9F,KAAK6E,WAAWT,OAAS,EAAG0B,GAAK,IAAKA,EAAG,CACpD,IAAIC,EAAQ/F,KAAK6E,WAAWiB,GAC5B,GAAIC,EAAMK,aAAeA,EAGvB,OAFApG,KAAKuG,SAASR,EAAMV,WAAYU,EAAMS,UACtCzB,EAAcgB,GACPhE,IAKb,MAAS,SAASiE,GAChB,IAAK,IAAIF,EAAI9F,KAAK6E,WAAWT,OAAS,EAAG0B,GAAK,IAAKA,EAAG,CACpD,IAAIC,EAAQ/F,KAAK6E,WAAWiB,GAC5B,GAAIC,EAAMC,SAAWA,EAAQ,CAC3B,IAAIH,EAASE,EAAMV,WACnB,GAAoB,UAAhBQ,EAAO9H,KAAkB,CAC3B,IAAI2I,EAASb,EAAOrG,IACpBuF,EAAcgB,GAEhB,OAAOW,GAMX,MAAM,IAAIxJ,MAAM,0BAGlByJ,cAAe,SAASC,EAAUC,EAAYC,GAa5C,OAZA9G,KAAK4E,SAAW,CACdrD,SAAUa,EAAOwE,GACjBC,WAAYA,EACZC,QAASA,GAGS,SAAhB9G,KAAK1B,SAGP0B,KAAKR,SAvrBPa,GA0rBO0B,IAnqBX,SAASD,EAAK2B,EAASC,EAAS3D,EAAM4D,GAEpC,IAAIoD,EAAiBrD,GAAWA,EAAQzC,qBAAqBuB,EAAYkB,EAAUlB,EAC/EwE,EAAYtG,OAAO+B,OAAOsE,EAAe9F,WACzCwE,EAAU,IAAInB,EAAQX,GAAe,IAMzC,OAFAqD,EAAUC,QAkMZ,SAA0BxD,EAAS1D,EAAM0F,GACvC,IAAIyB,EA3KuB,iBA6K3B,OAAO,SAAgB5I,EAAQkB,GAC7B,GA5KoB,cA4KhB0H,EACF,MAAM,IAAIhK,MAAM,gCAGlB,GA/KoB,cA+KhBgK,EAA6B,CAC/B,GAAe,UAAX5I,EACF,MAAMkB,EAKR,OAAO2H,IAMT,IAHA1B,EAAQnH,OAASA,EACjBmH,EAAQjG,IAAMA,IAED,CACX,IAAIoF,EAAWa,EAAQb,SACvB,GAAIA,EAAU,CACZ,IAAIwC,EAAiBC,EAAoBzC,EAAUa,GACnD,GAAI2B,EAAgB,CAClB,GAAIA,IAAmBrF,EAAkB,SACzC,OAAOqF,GAIX,GAAuB,SAAnB3B,EAAQnH,OAGVmH,EAAQf,KAAOe,EAAQd,MAAQc,EAAQjG,SAElC,GAAuB,UAAnBiG,EAAQnH,OAAoB,CACrC,GA/MqB,mBA+MjB4I,EAEF,MADAA,EA7Mc,YA8MRzB,EAAQjG,IAGhBiG,EAAQF,kBAAkBE,EAAQjG,SAEN,WAAnBiG,EAAQnH,QACjBmH,EAAQY,OAAO,SAAUZ,EAAQjG,KAGnC0H,EAxNkB,YA0NlB,IAAIrB,EAASyB,EAAS7D,EAAS1D,EAAM0F,GACrC,GAAoB,WAAhBI,EAAO9H,KAAmB,CAO5B,GAJAmJ,EAAQzB,EAAQ9F,KA7NA,YAFK,iBAmOjBkG,EAAOrG,MAAQuC,EACjB,SAGF,MAAO,CACLrC,MAAOmG,EAAOrG,IACdG,KAAM8F,EAAQ9F,MAGS,UAAhBkG,EAAO9H,OAChBmJ,EA3OgB,YA8OhBzB,EAAQnH,OAAS,QACjBmH,EAAQjG,IAAMqG,EAAOrG,OA1QP+H,CAAiB9D,EAAS1D,EAAM0F,GAE7CuB,EAcT,SAASM,EAASxH,EAAI0H,EAAKhI,GACzB,IACE,MAAO,CAAEzB,KAAM,SAAUyB,IAAKM,EAAGuC,KAAKmF,EAAKhI,IAC3C,MAAOY,GACP,MAAO,CAAErC,KAAM,QAASyB,IAAKY,IAiBjC,SAASoC,KACT,SAASE,KACT,SAASH,KA4BT,SAASe,EAAsBrC,GAC7B,CAAC,OAAQ,QAAS,UAAU6D,SAAQ,SAASxG,GAC3C2C,EAAU3C,GAAU,SAASkB,GAC3B,OAAOQ,KAAKiH,QAAQ3I,EAAQkB,OAoClC,SAAS+D,EAAcyD,GAgCrB,IAAIS,EAgCJzH,KAAKiH,QA9BL,SAAiB3I,EAAQkB,GACvB,SAASkI,IACP,OAAO,IAAI9H,SAAQ,SAAST,EAASC,IAnCzC,SAASuI,EAAOrJ,EAAQkB,EAAKL,EAASC,GACpC,IAAIyG,EAASyB,EAASN,EAAU1I,GAAS0I,EAAWxH,GACpD,GAAoB,UAAhBqG,EAAO9H,KAEJ,CACL,IAAI+F,EAAS+B,EAAOrG,IAChBE,EAAQoE,EAAOpE,MACnB,OAAIA,GACiB,iBAAVA,GACPwB,EAAOmB,KAAK3C,EAAO,WACdE,QAAQT,QAAQO,EAAM2D,SAASzF,MAAK,SAAS8B,GAClDiI,EAAO,OAAQjI,EAAOP,EAASC,MAC9B,SAASgB,GACVuH,EAAO,QAASvH,EAAKjB,EAASC,MAI3BQ,QAAQT,QAAQO,GAAO9B,MAAK,SAASgK,GAI1C9D,EAAOpE,MAAQkI,EACfzI,EAAQ2E,MACP,SAAS7G,GAGV,OAAO0K,EAAO,QAAS1K,EAAOkC,EAASC,MAvBzCA,EAAOyG,EAAOrG,KAiCZmI,CAAOrJ,EAAQkB,EAAKL,EAASC,MAIjC,OAAOqI,EAaLA,EAAkBA,EAAgB7J,KAChC8J,EAGAA,GACEA,KA+GV,SAASL,EAAoBzC,EAAUa,GACrC,IAAInH,EAASsG,EAASrD,SAASkE,EAAQnH,QACvC,QArTE+B,IAqTE/B,EAAsB,CAKxB,GAFAmH,EAAQb,SAAW,KAEI,UAAnBa,EAAQnH,OAAoB,CAC9B,GAAIsG,EAASrD,SAASsG,SAGpBpC,EAAQnH,OAAS,SACjBmH,EAAQjG,SA/TZa,EAgUIgH,EAAoBzC,EAAUa,GAEP,UAAnBA,EAAQnH,QAGV,OAAOyD,EAIX0D,EAAQnH,OAAS,QACjBmH,EAAQjG,IAAM,IAAIsI,UAChB,kDAGJ,OAAO/F,EAGT,IAAI8D,EAASyB,EAAShJ,EAAQsG,EAASrD,SAAUkE,EAAQjG,KAEzD,GAAoB,UAAhBqG,EAAO9H,KAIT,OAHA0H,EAAQnH,OAAS,QACjBmH,EAAQjG,IAAMqG,EAAOrG,IACrBiG,EAAQb,SAAW,KACZ7C,EAGT,IAAItC,EAAOoG,EAAOrG,IAElB,OAAMC,EAOFA,EAAKE,MAGP8F,EAAQb,EAASiC,YAAcpH,EAAKC,MAGpC+F,EAAQ5B,KAAOe,EAASkC,QAQD,WAAnBrB,EAAQnH,SACVmH,EAAQnH,OAAS,OACjBmH,EAAQjG,SAnXVa,GA6XFoF,EAAQb,SAAW,KACZ7C,GANEtC,GA3BPgG,EAAQnH,OAAS,QACjBmH,EAAQjG,IAAM,IAAIsI,UAAU,oCAC5BrC,EAAQb,SAAW,KACZ7C,GAoDX,SAASgG,EAAaC,GACpB,IAAIjC,EAAQ,CAAEC,OAAQgC,EAAK,IAEvB,KAAKA,IACPjC,EAAMI,SAAW6B,EAAK,IAGpB,KAAKA,IACPjC,EAAMK,WAAa4B,EAAK,GACxBjC,EAAMS,SAAWwB,EAAK,IAGxBhI,KAAK6E,WAAWX,KAAK6B,GAGvB,SAAShB,EAAcgB,GACrB,IAAIF,EAASE,EAAMV,YAAc,GACjCQ,EAAO9H,KAAO,gBACP8H,EAAOrG,IACduG,EAAMV,WAAaQ,EAGrB,SAASvB,EAAQX,GAIf3D,KAAK6E,WAAa,CAAC,CAAEmB,OAAQ,SAC7BrC,EAAYmB,QAAQiD,EAAc/H,MAClCA,KAAKuE,OAAM,GA8Bb,SAASnC,EAAOwE,GACd,GAAIA,EAAU,CACZ,IAAIqB,EAAiBrB,EAAStF,GAC9B,GAAI2G,EACF,OAAOA,EAAe5F,KAAKuE,GAG7B,GAA6B,mBAAlBA,EAAS/C,KAClB,OAAO+C,EAGT,IAAK3B,MAAM2B,EAASxC,QAAS,CAC3B,IAAI0B,GAAK,EAAGjC,EAAO,SAASA,IAC1B,OAASiC,EAAIc,EAASxC,QACpB,GAAIlD,EAAOmB,KAAKuE,EAAUd,GAGxB,OAFAjC,EAAKnE,MAAQkH,EAASd,GACtBjC,EAAKlE,MAAO,EACLkE,EAOX,OAHAA,EAAKnE,WAneTW,EAoeIwD,EAAKlE,MAAO,EAELkE,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMsD,GAIjB,SAASA,IACP,MAAO,CAAEzH,WAnfPW,EAmfyBV,MAAM,IAxfpC,CAssBC,WACE,OAAOK,MAAyB,iBAATD,MAAqBA,KAD9C,IAEQQ,SAAS,cAATA,K,gCC5sBK,SAAS2H,EAAeC,EAAKrC,GAC1C,OCJa,SAAyBqC,GACtC,GAAIC,MAAMC,QAAQF,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKrC,GACjD,IAAIwC,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKpI,EAET,IACE,IAAK,IAAiCqI,EAA7BC,EAAKR,EAAI9G,OAAOE,cAAmBgH,GAAMG,EAAKC,EAAG9E,QAAQlE,QAChE2I,EAAKpE,KAAKwE,EAAGhJ,QAEToG,GAAKwC,EAAKlE,SAAW0B,GAH8CyC,GAAK,IAK9E,MAAOnI,GACPoI,GAAK,EACLC,EAAKrI,EACL,QACA,IACOmI,GAAsB,MAAhBI,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIH,EAAI,MAAMC,GAIlB,OAAOH,EFnBuB,CAAqBH,EAAKrC,IGJ3C,WACb,MAAM,IAAIgC,UAAU,wDHG0C,GAJhE","file":"0.bundle.js","sourcesContent":["export async function handleResponse(response) {\n  if (response.ok) return response.json();\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\n// In a real app, would likely call an error logging service.\nexport function handleError(error) {\n  // eslint-disable-next-line no-console\n  console.error(\"API call failed. \" + error);\n  throw error;\n}\n","import React from \"react\";\r\nimport \"./Spinner.scss\";\r\n\r\nconst Spinner = () => {\r\n  return <div className=\"loader\">Loading...</div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.API_URL + \"/passengers/\";\n\nexport function getPassengers() {\n  return fetch(baseUrl).then(handleResponse).catch(handleError);\n}\n\nexport function savePassenger(passenger) {\n  return fetch(baseUrl + (passenger.id || \"\"), {\n    method: passenger.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify(passenger),\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n","/* eslint-disable no-unused-vars */\r\nimport * as types from \"./actionTypes\";\r\nimport * as passengerApi from \"../../api/passengerApi\";\r\n\r\nexport function loadPassengersSuccess(passengers) {\r\n  return { type: types.LOAD_PASSENGERS_SUCCESS, passengers };\r\n}\r\n\r\nexport function createPassengerSuccess(passenger) {\r\n  return { type: types.CREATE_PASSENGER_SUCCESS, passenger };\r\n}\r\n\r\nexport function updatePassengerSuccess(passenger) {\r\n  return { type: types.UPDATE_PASSENGER_SUCCESS, passenger };\r\n}\r\n\r\nexport function loadPassengers() {\r\n  return function (dispatch) {\r\n    // dispatch(beginApiCall());\r\n    return passengerApi\r\n      .getPassengers()\r\n      .then((passengers) => {\r\n        dispatch(loadPassengersSuccess(passengers));\r\n      })\r\n      .catch((error) => {\r\n        // dispatch(apiCallError(error));\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n\r\nexport function savePassenger(passenger) {\r\n  return function (dispatch, getState) {\r\n    // dispatch(beginApiCall());\r\n    return passengerApi\r\n      .savePassenger(passenger)\r\n      .then((savedPassenger) => {\r\n        passenger.id\r\n          ? dispatch(updatePassengerSuccess(savedPassenger))\r\n          : dispatch(createPassengerSuccess(savedPassenger));\r\n      })\r\n      .catch((error) => {\r\n        // dispatch(apiCallError(error));\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}"],"sourceRoot":""}