{"version":3,"sources":["webpack:///./src/components/flights/FlightsPage.js","webpack:///./src/api/passengerApi.js","webpack:///./src/redux/actions/passengerActions.js"],"names":["FlightsPage","this","props","loadFlights","flights","passengers","loadPassengers","length","catch","error","alert","style","marginTop","marginBottom","float","className","to","React","Component","connect","state","map","flight","filter","a","flightId","id","dispatch","bindActionCreators","flightActions","passengerActions","baseUrl","process","fetch","then","handleResponse","handleError","type","types","loadPassengersSuccess","savePassenger","passenger","getState","method","headers","body","JSON","stringify","passengerApi","savedPassenger","updatePassengerSuccess","createPassengerSuccess"],"mappings":"8NAUMA,E,4LACgB,MAC2CC,KAAKC,MAA1DC,EADU,EACVA,YAAaC,EADH,EACGA,QAASC,EADZ,EACYA,WAAYC,EADxB,EACwBA,eACnB,IAAnBF,EAAQG,QACVJ,IAAcK,OAAM,SAACC,GAAD,OAAWC,MAAM,0BAA4BD,MAEzC,IAAtBJ,EAAWE,QACbD,IAAiBE,OAAM,SAACC,GAAD,OACrBC,MAAM,6BAA+BD,Q,+BAKzC,OACE,oCACE,uCAC+B,IAA9BR,KAAKC,MAAME,QAAQG,QACa,IAAjCN,KAAKC,MAAMG,WAAWE,OACpB,kBAAC,IAAD,MAEA,oCACE,kBAAC,IAAD,CACEI,MAAO,CAAEC,UAAW,GAAIC,aAAc,GAAIC,MAAO,QACjDC,UAAU,kBACVC,GAAG,oBAHL,QAOA,kBAAC,IAAD,CAAYZ,QAASH,KAAKC,MAAME,gB,GA5BlBa,IAAMC,WAsEjBC,uBA3Bf,SAAyBC,GACvB,MAAO,CACLhB,QAC8B,IAA5BgB,EAAMf,WAAWE,OACb,GACAa,EAAMhB,QAAQiB,KAAI,SAACC,GACjB,sBACKA,EADL,CAEEjB,WAAYe,EAAMf,WAAWkB,QAC3B,SAACC,GAAD,OAAOA,EAAEC,WAAaH,EAAOI,MAC7BnB,YAGZF,WAAYe,EAAMf,eAItB,SAA4BsB,GAC1B,MAAO,CACLxB,YAAayB,YAAmBC,IAA2BF,GAC3DrB,eAAgBsB,YACdE,IACAH,MAKSR,CAA6CnB,I,mDC/EtD+B,EAAUC,+ECeT,SAAS1B,IACd,OAAO,SAAUqB,GAEf,ODfKM,MAAMF,GAASG,KAAKC,KAAgB3B,MAAM4B,KCiB5CF,MAAK,SAAC7B,GACLsB,EAlBD,SAA+BtB,GACpC,MAAO,CAAEgC,KAAMC,IAA+BjC,cAiB/BkC,CAAsBlC,OAEhCG,OAAM,SAACC,GAEN,MAAMA,MAKP,SAAS+B,EAAcC,GAC5B,OAAO,SAAUd,EAAUe,GAEzB,OD3BG,SAAuBD,GAC5B,OAAOR,MAAMF,GAAWU,EAAUf,IAAM,IAAK,CAC3CiB,OAAQF,EAAUf,GAAK,MAAQ,OAC/BkB,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,KAEpBP,KAAKC,KACL3B,MAAM4B,KCoBAY,CACUP,GACdP,MAAK,SAACe,GACLR,EAAUf,GACNC,EA1BL,SAAgCc,GACrC,MAAO,CAAEJ,KAAMC,IAAgCG,aAyB5BS,CAAuBD,IAChCtB,EA/BL,SAAgCc,GACrC,MAAO,CAAEJ,KAAMC,IAAgCG,aA8B5BU,CAAuBF,OAErCzC,OAAM,SAACC,GAEN,MAAMA,MA3Cd","file":"14.bundle.js","sourcesContent":["import React from \"react\";\r\nimport FlightList from \"./FlightList\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as flightActions from \"../../redux/actions/flightActions\";\r\nimport * as passengerActions from \"../../redux/actions/passengerActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../common/Spinner\";\r\n\r\nclass FlightsPage extends React.Component {\r\n  componentDidMount() {\r\n    const { loadFlights, flights, passengers, loadPassengers } = this.props;\r\n    if (flights.length === 0) {\r\n      loadFlights().catch((error) => alert(\"Loading flights failed \" + error));\r\n    }\r\n    if (passengers.length === 0) {\r\n      loadPassengers().catch((error) =>\r\n        alert(\"Loading passengers failed \" + error)\r\n      );\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2>Flights</h2>\r\n        {this.props.flights.length === 0 ||\r\n        this.props.passengers.length === 0 ? (\r\n          <Spinner />\r\n        ) : (\r\n          <>\r\n            <Link\r\n              style={{ marginTop: 10, marginBottom: 20, float: \"left\" }}\r\n              className=\"btn btn-primary\"\r\n              to=\"/staff/dashboard\"\r\n            >\r\n              Back\r\n            </Link>\r\n            <FlightList flights={this.props.flights}></FlightList>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nFlightsPage.propTypes = {\r\n  flights: PropTypes.array.isRequired,\r\n  passengers: PropTypes.array.isRequired,\r\n  loadFlights: PropTypes.func.isRequired,\r\n  loadPassengers: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    flights:\r\n      state.passengers.length === 0\r\n        ? []\r\n        : state.flights.map((flight) => {\r\n            return {\r\n              ...flight,\r\n              passengers: state.passengers.filter(\r\n                (a) => a.flightId === flight.id\r\n              ).length,\r\n            };\r\n          }),\r\n    passengers: state.passengers,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    loadFlights: bindActionCreators(flightActions.loadFlights, dispatch),\r\n    loadPassengers: bindActionCreators(\r\n      passengerActions.loadPassengers,\r\n      dispatch\r\n    ),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FlightsPage);\r\n","import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.API_URL + \"/passengers/\";\n\nexport function getPassengers() {\n  return fetch(baseUrl).then(handleResponse).catch(handleError);\n}\n\nexport function savePassenger(passenger) {\n  return fetch(baseUrl + (passenger.id || \"\"), {\n    method: passenger.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify(passenger),\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n","/* eslint-disable no-unused-vars */\r\nimport * as types from \"./actionTypes\";\r\nimport * as passengerApi from \"../../api/passengerApi\";\r\n\r\nexport function loadPassengersSuccess(passengers) {\r\n  return { type: types.LOAD_PASSENGERS_SUCCESS, passengers };\r\n}\r\n\r\nexport function createPassengerSuccess(passenger) {\r\n  return { type: types.CREATE_PASSENGER_SUCCESS, passenger };\r\n}\r\n\r\nexport function updatePassengerSuccess(passenger) {\r\n  return { type: types.UPDATE_PASSENGER_SUCCESS, passenger };\r\n}\r\n\r\nexport function loadPassengers() {\r\n  return function (dispatch) {\r\n    // dispatch(beginApiCall());\r\n    return passengerApi\r\n      .getPassengers()\r\n      .then((passengers) => {\r\n        dispatch(loadPassengersSuccess(passengers));\r\n      })\r\n      .catch((error) => {\r\n        // dispatch(apiCallError(error));\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n\r\nexport function savePassenger(passenger) {\r\n  return function (dispatch, getState) {\r\n    // dispatch(beginApiCall());\r\n    return passengerApi\r\n      .savePassenger(passenger)\r\n      .then((savedPassenger) => {\r\n        passenger.id\r\n          ? dispatch(updatePassengerSuccess(savedPassenger))\r\n          : dispatch(createPassengerSuccess(savedPassenger));\r\n      })\r\n      .catch((error) => {\r\n        // dispatch(apiCallError(error));\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n"],"sourceRoot":""}