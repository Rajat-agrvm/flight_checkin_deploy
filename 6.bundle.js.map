{"version":3,"sources":["webpack:///./src/components/dashboard/AdminDashboardPage.js","webpack:///./src/api/apiUtils.js","webpack:///./src/api/flightApi.js","webpack:///./src/redux/actions/flightActions.js","webpack:///./src/components/common/Spinner.js","webpack:///./src/api/passengerApi.js","webpack:///./src/redux/actions/passengerActions.js","webpack:///./node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/babel-preset-react-app/node_modules/regenerator-runtime/runtime-module.js","webpack:///./node_modules/babel-preset-react-app/node_modules/regenerator-runtime/runtime.js","webpack:///./src/components/common/SelectInput.js"],"names":["mapDispatchToProps","loadFlights","loadPassengers","connect","state","passengers","flights","history","useEffect","length","catch","error","alert","className","htmlFor","onClick","event","preventDefault","push","name","label","value","defaultOption","options","map","flight","text","onChange","target","handleResponse","response","a","ok","json","status","Error","handleError","console","baseUrl","process","dispatch","fetch","then","type","types","loadFlightsSuccess","saveFlight","getState","id","method","headers","body","JSON","stringify","flightApi","savedFlight","updateFlightSuccess","createFlightSuccess","Spinner","loadPassengersSuccess","savePassenger","passenger","passengerApi","savedPassenger","updatePassengerSuccess","createPassengerSuccess","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","g","Function","hadRuntime","regeneratorRuntime","Object","getOwnPropertyNames","indexOf","oldRuntime","e","global","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","wrap","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","next","result","toString","keys","object","reverse","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","stop","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","i","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","abrupt","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","obj","previousPromise","callInvokeWithMethodAndArg","invoke","unwrapped","return","TypeError","pushTryEntry","locs","iteratorMethod","SelectInput","option"],"mappings":"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","file":"6.bundle.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { loadFlights } from \"../../redux/actions/flightActions\";\r\nimport { loadPassengers } from \"../../redux/actions/passengerActions\";\r\nimport SelectInput from \"../common/SelectInput\";\r\nimport Spinner from \"../common/Spinner\";\r\n\r\nfunction AdminDashboardPage({\r\n  loadFlights,\r\n  flights,\r\n  passengers,\r\n  loadPassengers,\r\n  history,\r\n}) {\r\n  useEffect(() => {\r\n    if (flights.length === 0) {\r\n      loadFlights().catch((error) => alert(\"Loading flights failed \" + error));\r\n    }\r\n    if (passengers.length === 0) {\r\n      loadPassengers().catch((error) =>\r\n        alert(\"Loading flights failed \" + error)\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    history.push(\"/admin/flights\");\r\n  }\r\n\r\n  function handlePassengerChange(event) {\r\n    event.preventDefault();\r\n    const { value } = event.target;\r\n    history.push(\"/admin/passengers/\" + value);\r\n  }\r\n\r\n  function handleAncillaryChange(event) {\r\n    event.preventDefault();\r\n    const { value } = event.target;\r\n    history.push(\"/admin/ancillaries/\" + value);\r\n  }\r\n  function handleMealsChange(event) {\r\n    event.preventDefault();\r\n    const { value } = event.target;\r\n    history.push(\"/admin/meals/\" + value);\r\n  }\r\n  function handlePurchasesChange(event) {\r\n    event.preventDefault();\r\n    const { value } = event.target;\r\n    history.push(\"/admin/purchases/\" + value);\r\n  }\r\n  return (\r\n    <>\r\n      <h2>Admin Dashboard</h2>\r\n      {flights.length === 0 || passengers.length === 0 ? (\r\n        <Spinner />\r\n      ) : (\r\n        <>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"Flight List\">Flight List</label>\r\n              <div className=\"field\">\r\n                <button className=\"btn btn-primary\" onClick={handleClick}>\r\n                  Flight List\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <SelectInput\r\n              name=\"PassengerList\"\r\n              label=\"Manage Passengers\"\r\n              value={\"\"}\r\n              defaultOption=\"Select Flight\"\r\n              options={flights.map((flight) => ({\r\n                value: flight.name,\r\n                text: flight.name,\r\n              }))}\r\n              onChange={handlePassengerChange}\r\n            />\r\n            <SelectInput\r\n              name=\"AncillaryList\"\r\n              label=\"Manage Ancillaries\"\r\n              value={\"\"}\r\n              defaultOption=\"Select Flight\"\r\n              options={flights.map((flight) => ({\r\n                value: flight.name,\r\n                text: flight.name,\r\n              }))}\r\n              onChange={handleAncillaryChange}\r\n            />\r\n            <SelectInput\r\n              name=\"SpecialMeals\"\r\n              label=\"Manage SpecialMeals\"\r\n              value={\"\"}\r\n              defaultOption=\"Select Flight\"\r\n              options={flights.map((flight) => ({\r\n                value: flight.name,\r\n                text: flight.name,\r\n              }))}\r\n              onChange={handleMealsChange}\r\n            />\r\n            <SelectInput\r\n              name=\"purchases\"\r\n              label=\"Manage In-Flight Purchases\"\r\n              value={\"\"}\r\n              defaultOption=\"Select Flight\"\r\n              options={flights.map((flight) => ({\r\n                value: flight.name,\r\n                text: flight.name,\r\n              }))}\r\n              onChange={handlePurchasesChange}\r\n            />\r\n          </form>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nAdminDashboardPage.propTypes = {\r\n  flights: PropTypes.array.isRequired,\r\n  passengers: PropTypes.array.isRequired,\r\n  loadFlights: PropTypes.func.isRequired,\r\n  loadPassengers: PropTypes.func.isRequired,\r\n  // checkedInFlights: PropTypes.array.isRequired,\r\n  history: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  // const checkedInFlights =\r\n  //   state.flights.length > 0 && state.passengers.length > 0\r\n  //     ? state.flights.filter(\r\n  //         (flight) =>\r\n  //           state.passengers.filter(\r\n  //             (passenger) =>\r\n  //               passenger.flightId === flight.id &&\r\n  //               passenger.seat &&\r\n  //               passenger.status !== \"available\"\r\n  //           ).length === flight.passengers\r\n  //       )\r\n  //     : [];\r\n  return {\r\n    // checkedInFlights,\r\n    passengers: state.passengers,\r\n    flights: state.flights,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  loadFlights,\r\n  loadPassengers,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminDashboardPage);\r\n","export async function handleResponse(response) {\n  if (response.ok) return response.json();\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\n// In a real app, would likely call an error logging service.\nexport function handleError(error) {\n  // eslint-disable-next-line no-console\n  console.error(\"API call failed. \" + error);\n  throw error;\n}\n","import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.API_URL + \"/flights/\";\n\nexport function getFlights() {\n  return fetch(baseUrl).then(handleResponse).catch(handleError);\n}\n\nexport function saveFlight(flight) {\n  return fetch(baseUrl + (flight.id || \"\"), {\n    method: flight.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify(flight),\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n","/* eslint-disable no-unused-vars */\r\nimport * as types from \"./actionTypes\";\r\nimport * as flightApi from \"../../api/flightApi\";\r\nexport function loadFlightsSuccess(flights) {\r\n  return { type: types.LOAD_FLIGHTS_SUCCESS, flights };\r\n}\r\n\r\nexport function createFlightSuccess(flight) {\r\n  return { type: types.CREATE_FLIGHT_SUCCESS, flight };\r\n}\r\n\r\nexport function updateFlightSuccess(flight) {\r\n  return { type: types.UPDATE_FLIGHT_SUCCESS, flight };\r\n}\r\n\r\nexport function loadFlights() {\r\n  return function (dispatch) {\r\n    // dispatch(beginApiCall());\r\n    return flightApi\r\n      .getFlights()\r\n      .then((flights) => {\r\n        dispatch(loadFlightsSuccess(flights));\r\n      })\r\n      .catch((error) => {\r\n        // dispatch(apiCallError(error));\r\n        throw error;\r\n      });\r\n  };\r\n}\r\nexport function saveFlight(flight) {\r\n  return function (dispatch, getState) {\r\n    // dispatch(beginApiCall());\r\n    return flightApi\r\n      .saveFlight(flight)\r\n      .then((savedFlight) => {\r\n        flight.id\r\n          ? dispatch(updateFlightSuccess(savedFlight))\r\n          : dispatch(createFlightSuccess(savedFlight));\r\n      })\r\n      .catch((error) => {\r\n        // dispatch(apiCallError(error));\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport \"./Spinner.scss\";\r\n\r\nconst Spinner = () => {\r\n  return <div className=\"loader\">Loading...</div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.API_URL + \"/passengers/\";\n\nexport function getPassengers() {\n  return fetch(baseUrl).then(handleResponse).catch(handleError);\n}\n\nexport function savePassenger(passenger) {\n  return fetch(baseUrl + (passenger.id || \"\"), {\n    method: passenger.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify(passenger),\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n","/* eslint-disable no-unused-vars */\r\nimport * as types from \"./actionTypes\";\r\nimport * as passengerApi from \"../../api/passengerApi\";\r\n\r\nexport function loadPassengersSuccess(passengers) {\r\n  return { type: types.LOAD_PASSENGERS_SUCCESS, passengers };\r\n}\r\n\r\nexport function createPassengerSuccess(passenger) {\r\n  return { type: types.CREATE_PASSENGER_SUCCESS, passenger };\r\n}\r\n\r\nexport function updatePassengerSuccess(passenger) {\r\n  return { type: types.UPDATE_PASSENGER_SUCCESS, passenger };\r\n}\r\n\r\nexport function loadPassengers() {\r\n  return function (dispatch) {\r\n    // dispatch(beginApiCall());\r\n    return passengerApi\r\n      .getPassengers()\r\n      .then((passengers) => {\r\n        dispatch(loadPassengersSuccess(passengers));\r\n      })\r\n      .catch((error) => {\r\n        // dispatch(apiCallError(error));\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n\r\nexport function savePassenger(passenger) {\r\n  return function (dispatch, getState) {\r\n    // dispatch(beginApiCall());\r\n    return passengerApi\r\n      .savePassenger(passenger)\r\n      .then((savedPassenger) => {\r\n        passenger.id\r\n          ? dispatch(updatePassengerSuccess(savedPassenger))\r\n          : dispatch(createPassengerSuccess(savedPassenger));\r\n      })\r\n      .catch((error) => {\r\n        // dispatch(apiCallError(error));\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectInput = ({\n  name,\n  label,\n  onChange,\n  defaultOption,\n  value,\n  error,\n  options,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <div className=\"field\">\n        {/* Note, value is set here rather than on the option - docs: https://facebook.github.io/react/docs/forms.html */}\n        <select\n          name={name}\n          value={value}\n          onChange={onChange}\n          className=\"form-control\"\n        >\n          <option value=\"\">{defaultOption}</option>\n          {options.map((option) => {\n            return (\n              <option key={option.value} value={option.value}>\n                {option.text}\n              </option>\n            );\n          })}\n        </select>\n        {error && <div className=\"alert alert-danger\">{error}</div>}\n      </div>\n    </div>\n  );\n};\n\nSelectInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  defaultOption: PropTypes.string,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.bool,\n  ]),\n  error: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default SelectInput;\n"],"sourceRoot":""}